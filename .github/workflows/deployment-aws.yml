# Git workflow file for setting environment and deployment

name: Deploy to ECS Fargate - Deployment

on:
  workflow_run:
    workflows: ['Deployment Configuration - AWS ECS']
    types:
      - completed

jobs:
  environmentConfiguration:
    uses: elegsys/nd-pulse/.github/workflows/deployment-configuration.yml@main

  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ needs.environmentConfiguration.outputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.QA_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.QA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.QA_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate .env file
        run: |
          rm -f env-example-relational
          echo "${{ secrets.ENV }}" > env-example-relational

          ls -l env-example-relational

      - name: Build and push Docker image
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_URL }}
          docker build -t ${{ secrets.ECR_IMAGE_NAME }} -f DockerFileDeployment .
          docker tag ${{ secrets.ECR_IMAGE_NAME }}:latest ${{ secrets.ECR_URL }}/${{ secrets.ECR_IMAGE_NAME }}:latest
          docker push ${{ secrets.ECR_URL }}/${{ secrets.ECR_IMAGE_NAME }}:latest

      - name: Deploy to ECS Fargate
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_CLUSTER_SERVICE_NAME }} --force-new-deployment
